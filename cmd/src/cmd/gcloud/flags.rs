xflags::xflags! {
    src "./src/cmd/gcloud/flags.rs"

    cmd gcloud {
        /// Google Cloud login
        cmd login {
            required project: String
        }

        /// Google Cloud switch project
        cmd switch-project sp {
            required project: String
        }

        /// Google Cloud switch cluster
        cmd switch-cluster sc {
            required project: String
            required cluster: String
        }
    }
}

// generated start
// The following code is generated by `xflags` macro.
// Run `env UPDATE_XFLAGS=1 cargo build` to regenerate.
#[derive(Debug)]
pub struct Gcloud {
    pub subcommand: GcloudCmd,
}

#[derive(Debug)]
pub enum GcloudCmd {
    Login(Login),
    SwitchProject(SwitchProject),
    SwitchCluster(SwitchCluster),
}

#[derive(Debug)]
pub struct Login {
    pub project: String,
}

#[derive(Debug)]
pub struct SwitchProject {
    pub project: String,
}

#[derive(Debug)]
pub struct SwitchCluster {
    pub project: String,
    pub cluster: String,
}

impl Gcloud {
    #[allow(dead_code)]
    pub fn from_env_or_exit() -> Self {
        Self::from_env_or_exit_()
    }

    #[allow(dead_code)]
    pub fn from_env() -> xflags::Result<Self> {
        Self::from_env_()
    }

    #[allow(dead_code)]
    pub fn from_vec(args: Vec<std::ffi::OsString>) -> xflags::Result<Self> {
        Self::from_vec_(args)
    }
}
// generated end

impl Gcloud {
    pub fn help() -> &'static str {
        Self::HELP_
    }
}