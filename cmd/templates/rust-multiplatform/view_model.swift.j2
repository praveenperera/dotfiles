import SwiftUI

extension WeakReconciler: {{ module_name }}Reconciler where Reconciler == {{ view_model_name }} {}

@Observable class {{ view_model_name }}: {{ view_model_name }}Reconciler {
    private let logger = Log(id: "{{ view_model_name }}")
    var rust: Rust{{ view_model_name }}

    public init() {
        self.rust = Rust{{ view_model_name }}()
        self.rust.listenForUpdates(reconciler: WeakReconciler(self))
    }

    @MainActor
    func reconcile(message: {{ view_model_name }}ReconcileMessage) {
        logger.debug("Reconcile: \(message)")

        switch message {
        case .noOp:
           break 
        }
    }

    public func dispatch(action: {{ view_model_name }}Action) {
        logger.debug("Dispatch: \(action)")
        self.rust.dispatch(action: action)
    }
}
