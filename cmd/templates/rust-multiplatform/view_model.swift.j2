import SwiftUI

@Observable class {{ module_name }}ViewModel: {{ module_name }}ViewModelReconciler {
    private let logger = Log(id: "{{ module_name }}ViewModel")
    var rust: Rust{{ module_name }}ViewModel

    public init() {
        self.rust = Rust{{ module_name }}ViewModel()
        self.rust.listenForUpdates(reconciler: self)
    }

    func reconcile(message: {{ module_name }}ViewModelReconcileMessage) {
        Task {
            await MainActor.run {
                logger.debug("Reconcile: \(message)")

                switch message {
                case .noOp:
                   break 
                }
            }
        }
    }

    public func dispatch(action: {{ module_name }}ViewModelAction) {
        logger.debug("Dispatch: \(action)")
        self.rust.dispatch(action: action)
    }
}
